# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master", "test" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  test_env:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Set
      run: |
        echo "{TOKEN_TELEGRAM_BOT}=${{ secrets.TOKEN_TELEGRAM_BOT }}" >> "$GITHUB_ENV" &
        echo "{TOKEN_TELEGRAM_BOT_TEST}=${{ secrets.TOKEN_TELEGRAM_BOT_TEST }}" >> "$GITHUB_ENV" &
        echo "{TOKEN_APIFY}=${{ secrets.TOKEN_APIFY }}" >> "$GITHUB_ENV"
      env:
        TOKEN_TELEGRAM_BOT: ${{ secrets.TOKEN_TELEGRAM_BOT }}
        TOKEN_TELEGRAM_BOT_TEST: ${{ secrets.TOKEN_TELEGRAM_BOT_TEST }}
        TOKEN_APIFY: ${{ secrets.TOKEN_APIFY }}
    - name: Test with unittest
      run: |
        python -m unittest discover -s ./tests
      env:
        TOKEN_TELEGRAM_BOT: ${{ secrets.TOKEN_TELEGRAM_BOT }}
        TOKEN_TELEGRAM_BOT_TEST: ${{ secrets.TOKEN_TELEGRAM_BOT_TEST }}
        TOKEN_APIFY: ${{ secrets.TOKEN_APIFY }}
